# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15AyiakYs6dIq5uQCG7RCc6WVvlvQX5qE

#Implementing and comapring loss functions for custom dataset
"""

#importing libraries
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

"""1. Defining custom dataset y_true and y_pred for true values and model predictions"""

y_true = np.array([1, 0, 1, 1, 0, 1])
y_pred = np.array([
    [0.9, 0.1],
    [0.8, 0.2],
    [0.7, 0.3],
    [0.6, 0.4],
    [0.2, 0.8],
    [0.9, 0.1]
])

""" 2. computing mean squared error (MSE) and Categorical Cross-Entropy (CCE) losses using tf.keras.losses.MeanSquaredError() for MSE and tf.losses.CategoricalCrossentropy() for CCE.

"""

mse_loss = tf.keras.losses.MeanSquaredError()
cce_loss = tf.keras.losses.CategoricalCrossentropy()

"""3. using the references mse_loss and cce_loss to compute the loss values for the given y_true and y_pred.
4. for CCE using converting y_tre to one hot encoded format with 2 depth (binary classification)
"""

y_true_one_hot = tf.one_hot(y_true, depth=2)
mse_value = mse_loss(y_true_one_hot, y_pred).numpy()
cce_value = cce_loss(y_true_one_hot, y_pred).numpy()

"""5. Initial values of MSE and CCE for our initial dataset."""

print(f"Mean Squared Error (MSE): {mse_value:.4f}")
print(f"Categorical Cross-Entropy (CCE): {cce_value:.4f}")

"""6. slightly changing the values of t_pred and naming it as y_pred_modified
7. calculating the modified MSE and CCE using the same parameters that we used above.
"""

y_pred_modified = np.array([
    [0.85, 0.15],
    [0.75, 0.25],
    [0.65, 0.35],
    [0.55, 0.45],
    [0.3, 0.7],
    [0.95, 0.05]
])
mse_value_modified = mse_loss(y_true_one_hot, y_pred_modified).numpy()
cce_value_modified = cce_loss(y_true_one_hot, y_pred_modified).numpy()

"""8. Modified values of MSE and CCE with slightly modified dataset."""

print(f"Modified MSE: {mse_value_modified:.4f}")
print(f"Modified CCE: {cce_value_modified:.4f}")

"""9. plotting all the four values for undertanding"""

loss_labels = ['Original MSE', 'Modified MSE', 'Original CCE', 'Modified CCE']
loss_values = [mse_value, mse_value_modified, cce_value, cce_value_modified]

"""10. using plt.fugure(figsize) to plot the graph in 6, 4 ratio, title Loss Comaparison: MSE vs. CCE"""

plt.figure(figsize=(6, 4))
plt.bar(loss_labels, loss_values, color=['blue', 'cyan', 'red', 'orange'])
plt.ylabel("Loss Value")
plt.title("Loss Comparison: MSE vs. CCE")
plt.show()

"""Observation: from the bar chart visualisations the MSE values show relatively small difference, indicating that minor modifications in predictions have a moderate effect on MSE. On the other hand, the CCE values, are significantly higher, reflecting the fact that categorical cross-entropy is more sensitive to probability variations in classification problems. The small drop in CCE for the modified predictions suggests that the updated predictions are slightly better aligned with the true labels.

Overall, the graph highlights how different loss functions react to changes in predictions, with CCE demonstrating a higher impact on model evaluation in classification tasks.
"""